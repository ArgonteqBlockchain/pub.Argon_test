{"version":3,"file":"static/js/367.92677ec8.chunk.js","mappings":"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","sources":["webpack://acadify_saas_frontend/./src/Pages/Auth/LoginInput/style.module.scss?ec92","webpack://acadify_saas_frontend/./src/Shared/Heading/style.module.scss?1fa1","Shared/Heading/Heading.jsx","Pages/Auth/LoginInput/ReCaptcha.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContainerClass\":\"style_ContainerClass__yEuPn\",\"SubContainerClass\":\"style_SubContainerClass__AHsFn\",\"RowClass\":\"style_RowClass__EMxuA\",\"ImageColumnClass\":\"style_ImageColumnClass__B-63N\",\"formClass\":\"style_formClass__Ifq4u\",\"SingleImageClass\":\"style_SingleImageClass__V8Iw4\",\"VerifiedButtonClass\":\"style_VerifiedButtonClass__7ZDcU\",\"IcpToken\":\"style_IcpToken__wBmft\",\"VerifiedOne\":\"style_VerifiedOne__N0bNw\",\"Verifiedtwo\":\"style_Verifiedtwo__bp8Ww\",\"formOne\":\"style_formOne__aDQc2\",\"headingOne\":\"style_headingOne__9UAK6\",\"buttonone\":\"style_buttonone__BYKCa\",\"formcontrol\":\"style_formcontrol__tMwi5\",\"contICP\":\"style_contICP__v4uJP\",\"contICPTwo\":\"style_contICPTwo__nxaKK\",\"buttonVerify\":\"style_buttonVerify__-1wJx\",\"pathimage\":\"style_pathimage__GIQlT\",\"navigation\":\"style_navigation__FXn2U\",\"ColClass\":\"style_ColClass__hWiNH\",\"modalbody\":\"style_modalbody__RgoZM\",\"divcont\":\"style_divcont__NVY4f\",\"imageChecked\":\"style_imageChecked__1yPSu\",\"imageCheckedIcon\":\"style_imageCheckedIcon__IWcp0\",\"imageSelected\":\"style_imageSelected__y6XEP\"};","// extracted by mini-css-extract-plugin\nexport default {\"mainHeading\":\"style_mainHeading__AzOEG\",\"pageHeading\":\"style_pageHeading__RibcP\",\"subHeadingSize\":\"style_subHeadingSize__OHkzE\",\"mainHeadingOne\":\"style_mainHeadingOne__GnWWG\",\"mainHeadingTwo\":\"style_mainHeadingTwo__cJbte\",\"gotchaheading\":\"style_gotchaheading__ezWc7\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function Subheading(props) {\r\n  const { className, children, mainHeading, pageHeading, subHeadingSize,mainHeadingOne,mainHeadingTwo } = props;\r\n  const styleClass = classNames(className, {\r\n    [styles.pageHeading]: pageHeading,\r\n    [styles.subHeadingSize]: subHeadingSize,\r\n    [styles.mainHeading]: mainHeading,\r\n    [styles.mainHeadingOne]: mainHeadingOne,\r\n    [styles.mainHeadingTwo]: mainHeadingTwo,\r\n\r\n  });\r\n  return (\r\n    <h2 className={styleClass}>\r\n      <span>{children}</span>\r\n    </h2>\r\n  );\r\n};\r\n\r\nSubheading.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n  mainHeading: PropTypes.bool,\r\n  mainHeadingOne:PropTypes.bool,\r\n  mainHeadingTwo:PropTypes.bool,\r\n  pageHeading: PropTypes.bool,\r\n  subHeadingSize: PropTypes.bool,\r\n};\r\nSubheading.defaultProps = {\r\n  className: \"\",\r\n  mainHeading: false,\r\n  pageHeading: false,\r\n  subHeadingSize: false,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport styles from \"./style.module.scss\";\r\nimport Heading from \"../../../Shared/Heading/Heading\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport imageone from \"../../../Assets/Images/imageone.jpg\";\r\nimport { BsCheckLg } from \"react-icons/bs\";\r\n\r\nexport default function ReCaptcha() {\r\n  const [data, setData] = useState([]);\r\n  // const [testData, setTestData] = useState([...dummyData]);\r\n  const [imagesData, setImagesData] = useState([]);\r\n  const [singleData, setSingleData] = useState();\r\n  const [text, setText] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n\r\n  const handleChange = (item) => {\r\n    // console.log(\"item handle change\", item);\r\n    let newArray = [...imagesData];\r\n    if (newArray.includes(item.ischecked)) {\r\n      item.ischecked = 1;\r\n      newArray = newArray.filter((data) => data !== item.ischecked);\r\n    } else {\r\n      if (item.ischecked == 1) {\r\n        item.ischecked = 0;\r\n      } else {\r\n        item.ischecked = 1;\r\n      }\r\n    }\r\n\r\n    // console.log(\"newArray in handle change2\", newArray);\r\n    setImagesData([...newArray]);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      // .get(\"https://f6c4-182-185-191-116.in.ngrok.io/api/v1/captcha/show\")\r\n      .get(\r\n        \"https://easy-moments-spend-182-176-86-191.loca.lt/api/v1/captcha/show\"\r\n      )\r\n\r\n      .then(function (response) {\r\n        console.log(\"RESPONES: \", response);\r\n        setImagesData(response.data.data.DATA);\r\n        setSessionId(response.data.data.sessionId);\r\n\r\n        // console.log(response.data.data.DATA.length, \"response\");\r\n        let resData = response.data.data;\r\n\r\n        if (resData?.DATA?.length === undefined) {\r\n          setSingleData(resData);\r\n        } else {\r\n          resData?.DATA?.forEach((object) => {\r\n            object.ischecked = 0;\r\n            // object.ischecked=false;\r\n          });\r\n          setData(resData);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  console.log({ sessionId });\r\n\r\n  const verifyCaptcha = () => {\r\n    let apiData = [];\r\n    // console.log(\"imagesData in verified\", typeof imagesData);\r\n    let obj2;\r\n    if (imagesData instanceof Array) {\r\n      imagesData.map((item) => {\r\n        const obj = {\r\n          id: item.id,\r\n          answer: item.answer,\r\n          category: item.category,\r\n          ischecked: item.ischecked,\r\n        };\r\n        apiData.push(obj);\r\n      });\r\n    } else {\r\n      obj2 = [\r\n        {\r\n          id: imagesData.id,\r\n          answer: text,\r\n          category: imagesData.category,\r\n        },\r\n      ];\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        \"https://easy-moments-spend-182-176-86-191.loca.lt/api/v1/captcha/verify\",\r\n        {\r\n          answer: apiData?.length > 0 ? apiData : obj2,\r\n          sessionId,\r\n          // ischecked: apiData?.length > 0? true : false,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.data.data === \"unverified\") {\r\n          refreshCaptcha();\r\n        }\r\n        setMessage(response.data.data.data);\r\n        // console.log(response.data.data.data, \"response data data\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n\r\n        setMessage(error.data.data);\r\n      });\r\n  };\r\n  const refreshCaptcha = () => {\r\n    axios\r\n      .get(\"https://f6c4-182-185-191-116.in.ngrok.io/api/v1/captcha/show\")\r\n      .then((response) => {\r\n        // console.log(\"RESPONES: \", response);\r\n        setImagesData(response.data.data.DATA);\r\n        // console.log(response.data.data.DATA.length, \"response\");\r\n        let resData = response.data.data;\r\n\r\n        if (resData?.DATA?.length === undefined) {\r\n          setSingleData(resData);\r\n        } else {\r\n          resData?.DATA?.forEach((object) => {\r\n            object.ischecked = 0;\r\n            // object.ischecked=false;\r\n          });\r\n          setData(resData);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleImageSelect = (item, index) => {\r\n    // console.log(\"item handle change\", item);\r\n    let newArray = [...imagesData];\r\n    if (newArray.includes(item.ischecked)) {\r\n      item.ischecked = 1;\r\n      newArray = newArray.filter((data) => data !== item.ischecked);\r\n    } else {\r\n      if (item.ischecked == 1) {\r\n        item.ischecked = 0;\r\n      } else {\r\n        item.ischecked = 1;\r\n      }\r\n    }\r\n\r\n    // console.log(\"newArray in handle change2\", newArray);\r\n    setImagesData([...newArray]);\r\n\r\n    let itemData = { ...item };\r\n    itemData.checked = itemData.checked ? false : true;\r\n    data[index] = itemData;\r\n    setData([...data]);\r\n  };\r\n  return (\r\n    <div>\r\n      <Container className=\"w-100\">\r\n        <Row className={styles.gotchaheading}>\r\n          <Col>\r\n            <Heading mainHeading>GotcHA faucet {message?.data?.data}</Heading>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Heading mainHeading>{message?.data?.data}</Heading>\r\n\r\n      <Container className=\"col-lg-6\">\r\n        <Container className={styles.contICP}>\r\n          <Container className={styles.contICPTwo}>\r\n            <Row>\r\n              <Col>\r\n                <Heading mainHeadingOne>ICP Test Tokens</Heading>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Heading mainHeadingTwo>Wallet Address</Heading>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form className=\"w-100 rounded-top\">\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label></Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"\"\r\n                      onChange={(event) => setText(event.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                {submitted ? (\r\n                  <Container className=\"w-100 mt-2\">\r\n                    <Container className={styles.SubContainerClass}>\r\n                      <Row className={styles.RowClass}>\r\n                        <Col className={styles.ColClass}>\r\n                          {message !== \"verified\" ? (\r\n                            <Heading mainHeading>\r\n                              Select All{\" \"}\r\n                              {singleData?.categoryName\r\n                                ? singleData?.categoryName\r\n                                : data?.categoryName}{\" \"}\r\n                            </Heading>\r\n                          ) : null}\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                    <Container>\r\n                      {message === \"verified\" ? (\r\n                        <Heading mainHeading>Complete</Heading>\r\n                      ) : data?.DATA?.length > 0 ? (\r\n                        <>\r\n                          {message === \"unverified\" ? (\r\n                            <Heading mainHeading>UnVerified</Heading>\r\n                          ) : null}\r\n                          <Row className=\"d-flex justify-content-center\">\r\n                            {data?.DATA?.map((item, index) => {\r\n                              return (\r\n                                <Col className={styles.ImageColumnClass} xl=\"4\">\r\n                                  <input\r\n                                    className={styles.ImageColumnClassOne}\r\n                                    type=\"checkbox\"\r\n                                    onChange={() => handleChange(item, index)}\r\n                                  />\r\n                                  <img\r\n                                    src={item.path}\r\n                                    alt=\"loading\"\r\n                                    className={`${\r\n                                      item.checked ? styles.imageChecked : \"\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                      handleImageSelect(item, index);\r\n                                    }}\r\n                                  />\r\n                                  <span\r\n                                    className={`${styles.imageCheckedIcon} ${\r\n                                      !item.checked\r\n                                        ? styles.imageSelected\r\n                                        : null\r\n                                    } `}\r\n                                    onClick={() =>\r\n                                      handleImageSelect(item, index)\r\n                                    }\r\n                                  >\r\n                                    {<BsCheckLg color=\"green\" size=\"25\" />}\r\n                                  </span>\r\n                                </Col>\r\n                              );\r\n                            })}\r\n                          </Row>\r\n                        </>\r\n                      ) : message === \"verified\" ? (\r\n                        <Heading mainHeading>Complete</Heading>\r\n                      ) : (\r\n                        <>\r\n                          {message === \"unverified\" ? (\r\n                            <Heading mainHeading>UnVerified</Heading>\r\n                          ) : null}\r\n                          <Row>\r\n                            <Col>\r\n                              <Form>\r\n                                <div className={styles.SingleImageClass}>\r\n                                  <img src={singleData?.DATA?.path} />\r\n                                </div>\r\n                              </Form>\r\n                            </Col>\r\n                          </Row>\r\n                        </>\r\n                      )}\r\n                    </Container>\r\n                  </Container>\r\n                ) : (\r\n                  <Container>\r\n                    <Row>\r\n                      <Col>\r\n                        {\" \"}\r\n                        {/* <Button\r\n                          className={styles.class2}\r\n                          onClick={(e) => {setHidden((e) => !e);Verified(e);}}\r\n\r\n                        >\r\n                          Verify\r\n                        </Button> */}\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                )}\r\n                <Container className=\"mt-3\">\r\n                  <Row>\r\n                    <Col>\r\n                      {message !== \"verified\" ? (\r\n                        !submitted ? (\r\n                          <Button\r\n                            className={styles.buttonVerify}\r\n                            onClick={() => {\r\n                              setSubmitted(!submitted);\r\n                            }}\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            className={styles.buttonVerify}\r\n                            onClick={() => {\r\n                              verifyCaptcha();\r\n                              // setSubmitted(!submitted);\r\n                            }}\r\n                          >\r\n                            Verify\r\n                          </Button>\r\n                        )\r\n                      ) : null}\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n\r\n                {/* <Button\r\n                  className={styles.class2}\r\n                  onClick={() => {\r\n                    Verified();\r\n                  }}\r\n                >\r\n                  Verify\r\n                </Button> */}\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Container className=\"w-100 mt-2\">\r\n              <Container className={styles.SubContainerClass}>\r\n                <Row className={styles.RowClass}>\r\n                  <Col className={styles.ColClass}>\r\n                    <Heading mainHeading>\r\n                      Select All{\" \"}\r\n                      {singleData?.categoryName\r\n                        ? singleData?.categoryName\r\n                        : data?.categoryName}{\" \"}\r\n                    </Heading>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n              <Container>\r\n                {data?.DATA?.length > 0 ? (\r\n                  <Row>\r\n                    {data?.DATA?.map((item, index) => {\r\n                      return (\r\n                        <Col className={styles.ImageColumnClass} xl=\"4\">\r\n                          <input\r\n                            className={styles.ImageColumnClassOne}\r\n                            type=\"checkbox\"\r\n                            onChange={() => handleChange(item, index)}\r\n                          />\r\n                          <img src={item.path} />\r\n                          <Alert>{data.DATA.message}</Alert>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                  </Row>\r\n                ) : (\r\n                  <Row>\r\n                    <Col>\r\n                      <Form>\r\n                        <div className={styles.SingleImageClass}>\r\n                          <img src={singleData?.DATA?.path} />\r\n                        </div>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n              </Container>\r\n            </Container> */}\r\n          </Container>\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Subheading","props","className","children","mainHeading","pageHeading","subHeadingSize","mainHeadingOne","mainHeadingTwo","styleClass","classNames","styles","defaultProps","ReCaptcha","useState","data","setData","imagesData","setImagesData","singleData","setSingleData","text","setText","message","setMessage","submitted","setSubmitted","sessionId","setSessionId","useEffect","axios","then","response","console","log","DATA","resData","undefined","length","forEach","object","ischecked","catch","error","refreshCaptcha","handleImageSelect","item","index","newArray","includes","filter","itemData","checked","Container","Row","Col","Form","type","placeholder","onChange","event","target","value","categoryName","map","xl","handleChange","src","path","alt","onClick","color","size","Button","obj2","apiData","Array","obj","id","answer","category","push","verifyCaptcha"],"sourceRoot":""}